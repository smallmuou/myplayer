#!/bin/bash
#
# Copyright (C) 2014 Wenva <lvyexuwenfa100@126.com>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

set -e

spushd() {
     pushd "$1" 2>&1> /dev/null
}

spopd() {
     popd 2>&1> /dev/null
}

info() {
     local green="\033[1;32m"
     local normal="\033[0m"
     echo -e "[${green}INFO${normal}] $1"
}

cmdcheck() {
    command -v $1>/dev/null 2>&1 || { error >&2 "Please install command $1 first."; exit 1; }   
}

error() {
     local red="\033[1;31m"
     local normal="\033[0m"
     echo -e "[${red}ERROR${normal}] $1"
}

curdir() {
    if [ ${0:0:1} = '/' ] || [ ${0:0:1} = '~' ]; then
        echo "$(dirname $0)"
    elif [ -L $0 ];then
        name=`readlink $0`
        echo $(dirname $name)
    else
        echo "`pwd`/$(dirname $0)"
    fi
}

myos() {
    echo `uname|tr "[:upper:]" "[:lower:]"`
}

#########################################
###           GROBLE DEFINE           ###
#########################################

VERSION=1.0.0
AUTHOR=smallmuou

#########################################
###             ARG PARSER            ###
#########################################

usage() {
cat << EOF
`basename $0` version $VERSION by $AUTHOR

USAGE: `basename $0` [OPTIONS] play/pause/autoplay/autopause/switch

DESCRIPTION:
    play [playlist]
    autoplay [playlist]
    switch [playlist]   if no assign, will randomize a playlist.
    pause
    autopause

OPTIONS:
    -h                Show this help message and exit

EOF
exit 1
}

while getopts 'h' arg; do
    case $arg in
        h)
            usage
            ;;
        ?)
            usage
            ;;
    esac
done

shift $(($OPTIND - 1))


#########################################
###            MAIN ENTRY             ###
#########################################

# action uri
action() {
    uri=$1
    result=`/usr/bin/curl -s "http://localhost:3000$uri"`
    echo $result
}

# hh:mm:ss
rsecond() {
    echo $1|awk -F: '{print $3+$2*60+$1*60*60}'
}

function rand(){  
    min=$1  
    max=$(($2-$min+1))  
    num=$(($RANDOM+1000000000)) #增加一个10位的数再求余  
    echo $(($num%$max+$min))  
} 

# [cond]
random_playlist() {
    local cond=''
    [ $# -gt 0 ] && cond=$1
    local rep=`action "/api/v1/listplaylists"`
    local array=`echo $rep|sed 's/\[//g'|sed 's/\]//g'|sed 's/\"//g'`
    local count=`echo $array|tr -s "," "\012"|grep "^$cond"|wc -l`
    local index=$(rand 1 $count)
    local playlist=`echo $array|tr -s "," "\012"|grep "^$cond"|sed -n "$index p"`
    echo $playlist
}

playable() {
    local cur=$(rsecond `date +%H:%M:%S`)

    if test $cur -gt $(rsecond "08:00:00") && test $cur -lt $(rsecond "9:00:00") ;then
        echo 1
    elif test $cur -gt $(rsecond "12:00:00") && test $cur -lt $(rsecond "13:00:00") ;then
        echo 1
    elif test $cur -gt $(rsecond "17:00:00") && test $cur -lt $(rsecond "20:00:00") ;then
        echo 1
    else
        echo 0
    fi
}

pauseable() {
    local cur=$(rsecond `date +%H:%M:%S`)

    if test $cur -gt $(rsecond "08:00:00") && test $cur -lt $(rsecond "20:00:00") ;then
        echo 1
    else
        echo 0
    fi
}

# play 
play() {
    if [ $# -eq 0 ];then
        action "/api/v1/commands/?cmd=play"
    else
        local name=$1
        action "/api/v1/commands/?cmd=playplaylist&name=$name"
        action "/api/v1/commands/?cmd=next"
    fi
}

# autoplay
autoplay() {
    local enable=$(playable)

    if [ $enable -eq 1 ];then
        play $@
    fi
}

# pause
pause() {
    action "/api/v1/commands/?cmd=pause"
}

autopause() {
    local enable=$(pauseable)

    if [ $enable -eq 1 ];then
        pause
    fi
}


# playlist
switch() {
    local isplaying=0
    [ -n "`/usr/local/bin/volumio status|grep status|grep play`" ] && isplaying=1

    local playlist=$1
    play $playlist

    if [ $isplaying -eq 0 ];then
        sleep 1 # delay for avaiable control
        pause
    fi
}

case $1 in
    play)
        shift 1
        if [ $# -gt 0 ];then
            playlist=`random_playlist $1`
            play $playlist
        else
            play
        fi
        ;;
    autoplay)
        shift 1
        if [ $# -gt 0 ];then
            playlist=`random_playlist $1`
            autoplay $playlist
        else
            autoplay
        fi
        ;;
    pause)
        pause;;
    autopause)
        autopause;;
    switch)
        shift 1
        playlist=''
        if [ $# -gt 0 ];then
            playlist=`random_playlist $1`
        else
            playlist=`random_playlist`
        fi
        switch $playlist
        ;;
    ?)
        usage
        ;;
esac

